@charset 'utf-8';

/* 

CSS코드가 다국어 지원을 하도록 세팅해주는 구문입니다.
영문으로만 코딩한다면 반드시 필요한 것은 아닌데,
CSS 코드에 혹시 들어갈지 모르는 영문이나 숫자 외의
문자를 안전하게 처리하기 위해 넣어주기도 한답니다. 

*/

html {
  font-family: 'Noto Sans KR', sans-serif;
  font-size: 14px;
}

body {
  overflow-x: hidden;
  /* 가로스크롤이 안 생기도록 하기 위함 */
  color: rgb(29, 29, 31);
  letter-spacing: -0.05em;
  /* 자간 줄여준다 */
  background: white;
}

.container {
  /* 아이폰에서 가로스크롤 방지 */
  overflow: hidden;
}

.before-load .container {
  display: none;
}

body.before-load {
  overflow: hidden;
}

p {
  line-height: 1.6;
  /* 행간 */
}

a {
  color: rgb(29, 29, 31);
  text-decoration: none;
}

.global-nav {
  /* 스크롤 할 때 섹션 높이에 포함되지 않도록 하기 위해서 absolute 처리  */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 44px;
  padding: 0 1rem;
  z-index: 10;
}

.local-nav {
  /* 스크롤 할 때 섹션 높이에 포함되지 않도록 하기 위해서 absolute 처리  */

  position: absolute;
  top: 45px;
  left: 0;
  width: 100%;
  height: 52px;
  border-bottom: 1px solid #ddd;
  padding: 0 1rem;
  z-index: 11;
}

.local-nav-sticky .local-nav {
  position: fixed;
  top: 0;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: saturate(180%) blur(15px);
  -webkit-backdrop-filter: saturate(180%) blur(15px);
  -moz-backdrop-filter: saturate(180%) blur(15px);
  -o-backdrop-filter: saturate(180%) blur(15px);
}

.global-nav-links,
.local-nav-links {
  display: flex;
  align-items: center;
  max-width: 1000px;
  height: 100%;
  margin: 0 auto;
  /* 마진을 왼쪽, 오른쪽 모두 사용하기 때문에 
  가운데 정렬이 된다 */
}

.global-nav-links {
  justify-content: space-between;
}

.local-nav-links .product-name {
  margin-right: auto;
  /* margin에 auto를 사용하면 
  내가 사용할 수 있는 여백을 모두 사용한다 */
  font-size: 1.4rem;
  font-weight: bold;
  /* 폰트 import할 때 400, 900을 했으면 무조건 900으로 된다 */
}

.local-nav-links a {
  font-size: 0.8rem;
}

.local-nav-links a:not(.product-name) {
  margin-left: 2em;
}

.scroll-section {
  padding-top: 50vh;
  position: relative;
}

#scroll-section-0 h1 {
  font-size: 4rem;
  text-align: center;
  position: relative;
  z-index: 5;
  top: -10vh;
  /* padding도 view port 단위 썼으므로 */
}

.main-message {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 3em;
  font-size: 2.5rem;
  margin: 5px 0;
  opacity: 0;
  top: 35vh;
}

.main-message p {
  line-height: 1.2;
  font-weight: bold;
  text-align: center;
}

.main-message small {
  display: block;
  margin-bottom: 0.5em;
  font-size: 1.2rem;
}

#scroll-section2 .main-message {
  font-size: 3.5rem;
}

.description {
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 1rem;
  font-size: 1.2rem;
  color: #888;
}

.description strong {
  float: left;
  margin-right: 0.2em;
  font-size: 3rem;
  color: rgb(29, 29, 31);
}

.desc-message {
  width: 50%;
  font-weight: bold;
  opacity: 0;
}

.pin {
  width: 1px;
  height: 100px;
  background: rgb(29, 29, 31);
}

/* 

font-size는 rem
height, margin 같은 것들은 em으로 스타일링하는데 
그 이유는 폰트 사이즈에 대한 비율을 사용하겠다는 것이다 
rem을 사용하면 현재 포트사이즈에 상관없이 root element를 기준으로 
값이 결정되기 때문이다.
내 폰트사이즈에 비율을 활용할 수 있다는 점 때문에 em을 사용하는 것

*/

#scroll-section-2 .b {
  top: 10%;
  left: 40%;
}

#scroll-section-2 .c {
  top: 15%;
  left: 45%;
}

.mid-message {
  padding: 0 1rem;
  font-size: 2rem;
  color: #888;
  max-width: 1000px;
  margin: 0 auto;
}

.mid-message strong {
  color: rgb(29, 29, 31);
  font-weight: bold;
}

.canvas-caption {
  max-width: 1000px;
  margin: -24rem auto 0;

  padding: 0 1rem;
  color: #888;
  font-size: 1.2rem;
}

.footer {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 7rem;
  color: white;
  background: darkorange;
}

.sticky-elem {
  position: fixed;
  left: 0;
  width: 100%;
  display: none;
}

.sticky-elem-canvas {
  top: 0;
  height: 100%;
}

.sticky-elem-canvas canvas {
  position: absolute;
  top: 50%;
  left: 50%;
}

#show-scene-0 #scroll-section-0 .sticky-elem,
#show-scene-1 #scroll-section-1 .sticky-elem,
#show-scene-2 #scroll-section-2 .sticky-elem,
#show-scene-3 #scroll-section-3 .sticky-elem {
  display: block;
  will-change: transform, opacity;
}

.image-blend-canvas.sticky {
  position: fixed;
  top: 0;
}
#scroll-section-3 {
  display: flex;
  flex-direction: column;
  align-items: center;

  /*

  align-items: center 해주는 이유

  가로/세로 비율을 보면, 스크린의 비율보다 캔버스의 비율이 가로로 더 길기 때문에, 
  캔버스의 높이를 화면 높이에 딱 맞출 경우 가로는 캔버스가 더 길어지므로 양쪽으로 
  넘치게 된다는 이야기입니다~
  사용하고 계신 스크린이 가로로 길쭉한 형태라면 다를 수 있습니다.
  
  */
}

.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  background: white;
  transition: 0.5s;
  opacity: 0;
}

.before-load .loading {
  opacity: 1;
}

@keyframes loading-spin {
  100% {
    transform: rotate(360);
  }
}

@keyframes loading-circle-ani {
  0% {
    stroke-dashoffset: 157;
  }
  75% {
    stroke-dashoffset: -147;
  }
  100% {
    stroke-dashoffset: -157;
  }
}

.loading-circle {
  width: 54px;
  height: 54px;
  animation: loading-spin 3s infinite;
}

.loading-circle circle {
  stroke: black;
  stroke-width: 4;
  stroke-dasharray: 157; /* getTotalLength로 길이를 얻어올 수 있음 */
  stroke-dashoffset: 0;
  fill: transparent;
  /* transition: 1s; */
  animation: loading-circle-ani 1s infinite;
}

/* .loading-circle:hover circle {
  stroke-dashoffset: -157;
} */

@media (min-width: 1024px) {
  #scroll-section-0 h1 {
    font-size: 9vw;
  }

  .main-message {
    font-size: 4vw;
  }

  .description {
    font-size: 2rem;
    padding: 0;
  }

  .description strong {
    font-size: 6rem;
  }

  #scroll-section-2 .main-message p {
    font-size: 6vw;
  }

  .main-message small {
    font-size: 1.5vw;
  }

  .desc-message {
    width: 20%;
  }

  #scroll-section-2 .b {
    top: 20%;
    left: 53%;
  }

  #scroll-section-2 .c {
    left: 55%;
  }

  .mid-message {
    width: 1000px;
    font-size: 4vw;
    padding: 0;
  }

  .canvas-caption {
    margin-top: -8rem;
    font-size: 2rem;
    padding: 0;
  }
}

/*

rem을 사용하면 root element px에 대한 고정적인 값이 된다 
vw는 창 크기의 몇 퍼센트인지로 결정된다
이것은 디자이너의 의도에 따라가겠다는 것 
창 크기에 상관없이 고정시키고 싶으면 rem 사용

애플은 창 크기에 따라가더라 

*/
